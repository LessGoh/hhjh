import streamlit as st
from llama_index.indices.managed.llama_cloud import LlamaCloudIndex
from llama_index.core import Settings
from llama_index.llms.openai import OpenAI
from llama_index.core.prompts import PromptTemplate
import json
import os

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∏–Ω–¥–µ–∫—Å–∞
INDEX_NAME = "Arxiv(Vilatility) 28/05"
PROJECT_NAME = "Default"
ORGANIZATION_ID = "3fee475d-903c-4b04-b81a-50c133aca474"

# –ö–∞—Å—Ç–æ–º–Ω—ã–π —Å–∏—Å—Ç–µ–º–Ω—ã–π –ø—Ä–æ–º–ø—Ç –¥–ª—è –¥–µ—Ç–∞–ª—å–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤ –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ
DETAILED_QA_PROMPT = PromptTemplate(
    """\
–¢—ã - —ç–∫—Å–ø–µ—Ä—Ç –≤ –æ–±–ª–∞—Å—Ç–∏ —Ñ–∏–Ω–∞–Ω—Å–æ–≤ –∏ –ø–æ—Ä—Ç—Ñ–µ–ª—å–Ω–æ–≥–æ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è. –¢–≤–æ—è –∑–∞–¥–∞—á–∞ - –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç—å –∏—Å—á–µ—Ä–ø—ã–≤–∞—é—â–∏–π, –ø–æ–¥—Ä–æ–±–Ω—ã–π –∏ –∞–∫–∞–¥–µ–º–∏—á–µ—Å–∫–∏ —Ç–æ—á–Ω—ã–π –æ—Ç–≤–µ—Ç –ù–ê –†–£–°–°–ö–û–ú –Ø–ó–´–ö–ï –Ω–∞ –æ—Å–Ω–æ–≤–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞.

–í–ê–ñ–ù–û: –û–¢–í–ï–ß–ê–ô –¢–û–õ–¨–ö–û –ù–ê –†–£–°–°–ö–û–ú –Ø–ó–´–ö–ï!

–ò–ù–°–¢–†–£–ö–¶–ò–ò –ü–û –û–¢–í–ï–¢–£:
1. –ü—Ä–µ–¥–æ—Å—Ç–∞–≤—å –ø–æ–¥—Ä–æ–±–Ω–æ–µ –∏ –≤—Å–µ—Å—Ç–æ—Ä–æ–Ω–Ω–µ–µ –æ–±—ä—è—Å–Ω–µ–Ω–∏–µ –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ
2. –°—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä—É–π –æ—Ç–≤–µ—Ç —Å —á–µ—Ç–∫–∏–º–∏ –ø–æ–¥–∑–∞–≥–æ–ª–æ–≤–∫–∞–º–∏
3. –í–∫–ª—é—á–∏ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –ø—Ä–∏–º–µ—Ä—ã, —Ü–∏—Ñ—Ä—ã –∏ —Ñ–æ—Ä–º—É–ª—ã –∏–∑ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤
4. –û–±—ä—è—Å–Ω–∏ –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–æ–µ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –∏ –∑–Ω–∞—á–∏–º–æ—Å—Ç—å
5. –£–∫–∞–∂–∏ –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ –∏ –Ω–µ–¥–æ—Å—Ç–∞—Ç–∫–∏ (–µ—Å–ª–∏ –ø—Ä–∏–º–µ–Ω–∏–º–æ)
6. –ò—Å–ø–æ–ª—å–∑—É–π –∞–∫–∞–¥–µ–º–∏—á–µ—Å–∫–∏–π —Å—Ç–∏–ª—å —Å –¥–æ—Å—Ç—É–ø–Ω—ã–º–∏ –æ–±—ä—è—Å–Ω–µ–Ω–∏—è–º–∏
7. –ü–µ—Ä–µ–≤–æ–¥–∏ –≤—Å–µ –∞–Ω–≥–ª–∏–π—Å–∫–∏–µ —Ç–µ—Ä–º–∏–Ω—ã –Ω–∞ —Ä—É—Å—Å–∫–∏–π —Å –ø–æ—è—Å–Ω–µ–Ω–∏–µ–º –≤ —Å–∫–æ–±–∫–∞—Ö
8. –ï—Å–ª–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ, —á–µ—Ç–∫–æ —É–∫–∞–∂–∏ —ç—Ç–æ

–°–¢–†–£–ö–¢–£–†–ê –û–¢–í–ï–¢–ê –ù–ê –†–£–°–°–ö–û–ú –Ø–ó–´–ö–ï:
- **–û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ**: –ß–µ—Ç–∫–æ–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ç–µ—Ä–º–∏–Ω–∞/–∫–æ–Ω—Ü–µ–ø—Ü–∏–∏
- **–ü—Ä–∏–Ω—Ü–∏–ø—ã —Ä–∞–±–æ—Ç—ã**: –ö–∞–∫ —ç—Ç–æ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∏—Ä—É–µ—Ç
- **–ú–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –æ—Å–Ω–æ–≤—ã**: –§–æ—Ä–º—É–ª—ã –∏ —Ä–∞—Å—á–µ—Ç—ã (–µ—Å–ª–∏ –µ—Å—Ç—å)
- **–ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ –ø—Ä–∏–º–µ—Ä—ã**: –ö–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ —Å–ª—É—á–∞–∏ –∏–∑ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤
- **–ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ –∏ –Ω–µ–¥–æ—Å—Ç–∞—Ç–∫–∏**: –û–±—ä–µ–∫—Ç–∏–≤–Ω—ã–π –∞–Ω–∞–ª–∏–∑
- **–ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ**: –ì–¥–µ –∏ –∫–∞–∫ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è
- **–°–≤—è–∑—å —Å –¥—Ä—É–≥–∏–º–∏ –∫–æ–Ω—Ü–µ–ø—Ü–∏—è–º–∏**: –ö–æ–Ω—Ç–µ–∫—Å—Ç –≤ –æ–±—â–µ–π —Ç–µ–æ—Ä–∏–∏

–ö–û–ù–¢–ï–ö–°–¢ –î–û–ö–£–ú–ï–ù–¢–û–í:
{context_str}

–í–û–ü–†–û–° –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø:
{query_str}

–î–ï–¢–ê–õ–¨–ù–´–ô –û–¢–í–ï–¢ –ù–ê –†–£–°–°–ö–û–ú –Ø–ó–´–ö–ï:
"""
)

def get_api_keys():
    """–ü–æ–ª—É—á–∞–µ–º API –∫–ª—é—á–∏ –∏–∑ —Å–µ–∫—Ä–µ—Ç–æ–≤ Streamlit"""
    try:
        llamaindex_key = st.secrets["LLAMAINDEX_API_KEY"]
        openai_key = st.secrets["OPENAI_API_KEY"]
        
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º OpenAI –∫–ª—é—á –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –æ–∫—Ä—É–∂–µ–Ω–∏—è
        os.environ["OPENAI_API_KEY"] = openai_key
        
        return llamaindex_key, openai_key
    except KeyError as e:
        st.error(f"üîë **API –∫–ª—é—á –Ω–µ –Ω–∞–π–¥–µ–Ω:** {str(e)}")
        st.markdown("""
        **–î–æ–±–∞–≤—å—Ç–µ —Å–ª–µ–¥—É—é—â–∏–µ –∫–ª—é—á–∏ –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Streamlit Cloud:**
        
        ```toml
        LLAMAINDEX_API_KEY = "–≤–∞—à-llamaindex-–∫–ª—é—á"
        OPENAI_API_KEY = "–≤–∞—à-openai-–∫–ª—é—á"
        ```
        
        **–ö–∞–∫ –¥–æ–±–∞–≤–∏—Ç—å:**
        1. –û—Ç–∫—Ä–æ–π—Ç–µ –≤–∞—à–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –Ω–∞ share.streamlit.io
        2. –ù–∞–∂–º–∏—Ç–µ –º–µ–Ω—é (‚ãØ) ‚Üí Settings
        3. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ —Ä–∞–∑–¥–µ–ª "Secrets"
        4. –í—Å—Ç–∞–≤—å—Ç–µ –≤–∞—à–∏ —Ä–µ–∞–ª—å–Ω—ã–µ API –∫–ª—é—á–∏
        5. –°–æ—Ö—Ä–∞–Ω–∏—Ç–µ –∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
        """)
        st.stop()
        return None, None

@st.cache_resource
def initialize_index():
    """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∏–Ω–¥–µ–∫—Å –æ–¥–∏–Ω —Ä–∞–∑ –∏ –∫–µ—à–∏—Ä—É–µ–º"""
    llamaindex_key, openai_key = get_api_keys()
    
    if not llamaindex_key or not openai_key:
        return None
        
    try:
        # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º OpenAI LLM —Å –æ–ø—Ç–∏–º–∞–ª—å–Ω—ã–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏ –¥–ª—è —Ä—É—Å—Å–∫–æ–≥–æ —è–∑—ã–∫–∞
        llm = OpenAI(
            model="gpt-4",  # –ò—Å–ø–æ–ª—å–∑—É–µ–º GPT-4 –¥–ª—è –ª—É—á—à–µ–≥–æ –∫–∞—á–µ—Å—Ç–≤–∞
            temperature=0.1,  # –ù–∏–∑–∫–∞—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –¥–ª—è —Ç–æ—á–Ω–æ—Å—Ç–∏
            max_tokens=3000,  # –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –ª–∏–º–∏—Ç –¥–ª—è –¥–µ—Ç–∞–ª—å–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤
        )
        Settings.llm = llm
        
        # –°–æ–∑–¥–∞–µ–º –∏–Ω–¥–µ–∫—Å
        index = LlamaCloudIndex(
            name=INDEX_NAME,
            project_name=PROJECT_NAME,
            organization_id=ORGANIZATION_ID,
            api_key=llamaindex_key,
        )
        
        return index
    except Exception as e:
        st.error(f"‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –∏–Ω–¥–µ–∫—Å–∞: {str(e)}")
        return None

def create_enhanced_query_engine(index):
    """–°–æ–∑–¥–∞–µ—Ç –Ω–∞—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π query engine —Å —É–ª—É—á—à–µ–Ω–Ω—ã–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏"""
    return index.as_query_engine(
        similarity_top_k=30,  # –ë–æ–ª—å—à–µ —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω—ã—Ö –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤
        response_mode="tree_summarize",  # –õ—É—á—à–∏–π —Ä–µ–∂–∏–º –¥–ª—è –¥–µ—Ç–∞–ª—å–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤
        text_qa_template=DETAILED_QA_PROMPT,  # –ö–∞—Å—Ç–æ–º–Ω—ã–π –ø—Ä–æ–º–ø—Ç –¥–ª—è —Ä—É—Å—Å–∫–æ–≥–æ —è–∑—ã–∫–∞
        streaming=False,  # –û—Ç–∫–ª—é—á–∞–µ–º streaming –¥–ª—è –ø–æ–ª–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤
        use_async=False,
    )

def query_llamaindex(question: str) -> dict:
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∑–∞–ø—Ä–æ—Å –∫ LlamaIndex –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –æ—Ç–≤–µ—Ç –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ"""
    
    index = initialize_index()
    if not index:
        return {
            "response": "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ –∏–Ω–¥–µ–∫—Å—É",
            "sources": []
        }
    
    try:
        # –°–æ–∑–¥–∞–µ–º —É–ª—É—á—à–µ–Ω–Ω—ã–π query engine
        query_engine = create_enhanced_query_engine(index)
        
        # –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª–Ω–æ—Ü–µ–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç
        response = query_engine.query(question)
        
        return {
            "response": str(response.response) if response.response else "–ù–µ —É–¥–∞–ª–æ—Å—å —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –æ—Ç–≤–µ—Ç",
            "sources": []  # –ù–µ —Å–æ–±–∏—Ä–∞–µ–º –∏—Å—Ç–æ—á–Ω–∏–∫–∏
        }
        
    except Exception as e:
        return {
            "response": f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞–ø—Ä–æ—Å–∞: {str(e)}",
            "sources": []
        }

def format_response(result: dict) -> str:
    """–§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç –æ—Ç–≤–µ—Ç –±–µ–∑ –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤"""
    return result["response"]

def main():
    st.set_page_config(
        page_title="Arxiv+Llama+OpenAI Q/A assist",
        page_icon="ü§ñ",
        layout="wide"
    )
    
    st.title("ü§ñ Arxiv+Llama+OpenAI Q/A assist")
    st.markdown("üí° **–†–∞–∑ —Ä–∞–∑ —ç—Ç–æ —Ö–∞—Ä–¥–±–∞—Å**")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º API –∫–ª—é—á–∏ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ
    llamaindex_key, openai_key = get_api_keys()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –∏–Ω–¥–µ–∫—Å—É
    index = initialize_index()
    if not index:
        st.error("–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ –∏–Ω–¥–µ–∫—Å—É. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ API –∫–ª—é—á–∏.")
        return
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∏—Å—Ç–æ—Ä–∏–∏ —á–∞—Ç–∞
    if "messages" not in st.session_state:
        st.session_state.messages = []
    
    # –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏—Å—Ç–æ—Ä–∏–∏ —á–∞—Ç–∞
    for message in st.session_state.messages:
        with st.chat_message(message["role"]):
            st.markdown(message["content"])
    
    # –ü–æ–ª–µ –¥–ª—è –≤–≤–æ–¥–∞ –≤–æ–ø—Ä–æ—Å–∞
    if prompt := st.chat_input("–ó–∞–¥–∞–π—Ç–µ –≤–æ–ø—Ä–æ—Å –æ —Ñ–∏–Ω–∞–Ω—Å–∞—Ö –∏ –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏—è—Ö..."):
        # –î–æ–±–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        st.session_state.messages.append({"role": "user", "content": prompt})
        with st.chat_message("user"):
            st.markdown(prompt)
        
        # –ü–æ–ª—É—á–∞–µ–º –æ—Ç–≤–µ—Ç –æ—Ç LlamaIndex
        with st.chat_message("assistant"):
            with st.spinner("üîç –ê–Ω–∞–ª–∏–∑..."):
                result = query_llamaindex(prompt)
                formatted_response = format_response(result)
            st.markdown(formatted_response)
        
        # –î–æ–±–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç –≤ –∏—Å—Ç–æ—Ä–∏—é
        st.session_state.messages.append({"role": "assistant", "content": formatted_response})
    
    # –ë–æ–∫–æ–≤–∞—è –ø–∞–Ω–µ–ª—å —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π
    with st.sidebar:
        st.header("‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —ç–∫—Å–ø–µ—Ä—Ç–∞")
        
        # –°—Ç–∞—Ç—É—Å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ API
        try:
            llamaindex_key = st.secrets["LLAMAINDEX_API_KEY"]
            openai_key = st.secrets["OPENAI_API_KEY"]
            
            st.success("üîë LlamaIndex –ø–æ–¥–∫–ª—é—á–µ–Ω")
            st.success("üß† GPT-4 –∞–∫—Ç–∏–≤–µ–Ω")
            st.success("üá∑üá∫ –†–µ–∂–∏–º —Ä—É—Å—Å–∫–æ–≥–æ —è–∑—ã–∫–∞")
            st.success("üìÑ –ò—Å—Ç–æ—á–Ω–∏–∫–∏ —Å–∫—Ä—ã—Ç—ã")
            
            if index:
                st.success("üîó –ò–Ω–¥–µ–∫—Å –≥–æ—Ç–æ–≤")
                
        except:
            st.error("‚ùå API –∫–ª—é—á–∏ –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã")
        
        # –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –æ—Ç–≤–µ—Ç–æ–≤
        st.markdown("---")
        st.markdown("### ‚öôÔ∏è –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –æ—Ç–≤–µ—Ç–æ–≤")
        st.text("üìà –ò—Å—Ç–æ—á–Ω–∏–∫–æ–≤: 12")
        st.text("üéØ –†–µ–∂–∏–º: tree_summarize") 
        st.text("üß† –ú–æ–¥–µ–ª—å: GPT-4")
        st.text("üå°Ô∏è –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: 0.1")
        st.text("üìù –ú–∞–∫—Å. —Ç–æ–∫–µ–Ω—ã: 3000")
        st.text("üá∑üá∫ –Ø–∑—ã–∫: –†—É—Å—Å–∫–∏–π")
        st.text("üìö –ò—Å—Ç–æ—á–Ω–∏–∫–∏: –°–∫—Ä—ã—Ç—ã")
        
        if st.button("üóëÔ∏è –û—á–∏—Å—Ç–∏—Ç—å —á–∞—Ç"):
            st.session_state.messages = []
            st.rerun()
        
        st.markdown("---")
        st.markdown("### üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞")
        st.write(f"üí¨ –°–æ–æ–±—â–µ–Ω–∏–π: {len(st.session_state.messages)}")
        
        st.markdown("---")
        st.markdown("### üí° –ü—Ä–∏–º–µ—Ä—ã –≤–æ–ø—Ä–æ—Å–æ–≤")
        
        example_questions = [
            "–†–∞—Å—Å–∫–∞–∂–∏ –ø–æ–¥—Ä–æ–±–Ω–æ –æ–± –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–æ–Ω–Ω—ã—Ö —Å—Ç—Ä–∞—Ç–µ–≥–∏—è—Ö",
            "–ß—Ç–æ —Ç–∞–∫–æ–µ —Ä–∞–≤–Ω–æ–≤–∑–≤–µ—à–µ–Ω–Ω–∞—è –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–æ–Ω–Ω–∞—è —Å—Ç—Ä–∞—Ç–µ–≥–∏—è?",
            "–û–±—ä—è—Å–Ω–∏ –º–µ—Ç–æ–¥—ã –º–∏–Ω–∏–º–∏–∑–∞—Ü–∏–∏ –¥–∏—Å–ø–µ—Ä—Å–∏–∏ –ø–æ—Ä—Ç—Ñ–µ–ª—è",
            "–ö–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–µ —Ö–µ–¥–∂–∏—Ä–æ–≤–∞–Ω–∏–µ –≤–æ–ª–∞—Ç–∏–ª—å–Ω–æ—Å—Ç–∏?",
            "–í —á–µ–º —Ä–∞–∑–Ω–∏—Ü–∞ –º–µ–∂–¥—É —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–º–∏ –∏ –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–º–∏ —Å—Ç—Ä–∞—Ç–µ–≥–∏—è–º–∏?",
            "–û–±—ä—è—Å–Ω–∏ –ø—Ä–∏–Ω—Ü–∏–ø—ã –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π –¥–∏–≤–µ—Ä—Å–∏—Ñ–∏–∫–∞—Ü–∏–∏ –ø–æ—Ä—Ç—Ñ–µ–ª—è"
        ]
        
        for question in example_questions:
            if st.button(f"üìù {question}", key=f"example_{hash(question)}"):
                # –î–æ–±–∞–≤–ª—è–µ–º –≤–æ–ø—Ä–æ—Å –≤ —á–∞—Ç
                st.session_state.messages.append({"role": "user", "content": question})
                # –ü–æ–ª—É—á–∞–µ–º –æ—Ç–≤–µ—Ç
                with st.spinner("üîç –ì–µ–Ω–µ—Ä–∏—Ä—É—é —ç–∫—Å–ø–µ—Ä—Ç–Ω—ã–π –æ—Ç–≤–µ—Ç..."):
                    result = query_llamaindex(question)
                    formatted_response = format_response(result)
                st.session_state.messages.append({"role": "assistant", "content": formatted_response})
                st.rerun()
        
        st.markdown("---")
        st.markdown("### ‚ÑπÔ∏è –û —Å–∏—Å—Ç–µ–º–µ")
        st.markdown("""
        **üß† –ò–ò:** GPT-4 —Å –ø—Ä–æ–º–ø—Ç–∞–º–∏ –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ
        
        **üìö –ë–∞–∑–∞ –∑–Ω–∞–Ω–∏–π:** Arxiv
        
        **üîç –ê–Ω–∞–ª–∏–∑:** 30 —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω—ã—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤
        
        **üìÑ –§–æ—Ä–º–∞—Ç:** –ë–µ–∑ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤
        
        """)

if __name__ == "__main__":
    main()
